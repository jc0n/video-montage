#!/usr/bin/env python

import argparse

from VideoMontager import VideoMontager, __version__, __author__

def parse_args():
    parser = argparse.ArgumentParser(
        description="Create a montage of frames from a video file")

    parser.add_argument('video_files', metavar='video_file', nargs='*',
            help='List video files to montage')

    parser.add_argument('--thumbnails', '-n', metavar='N', default=25, type=int,
            help='Number of thumbnails to include')

    parser.add_argument('--thumbsize', '-s', metavar='N', default=202, type=int,
            help='Size of individual thumbnails')

    parser.add_argument('--outdir', '-d', metavar='PATH', default=None,
            help='Output directory for montage images defaults to same '
                 'directory as the input video file.')

    parser.add_argument('--overwrite', default=False, action='store_true',
            help='Overwrite existing montage image files.')

    parser.add_argument('--start-seconds', '-ss', metavar='N', default=30, type=int,
            help='Start reading from video at specified offset in seconds')

    parser.add_argument('--format', '-f', default='png',
            choices=('png', 'gif', 'jpg'),
            help='Output format for montage image')

    parser.add_argument('--tempdir', '-t', metavar='PATH', default=None,
            help='Temporary directory for processing')

    parser.add_argument('--background-color', '-bg', default='black',
            help='Background color for the montage.')

    parser.add_argument('--version', '-V', default=False, action='store_true',
            help="Print version number and exit.")

    args = parser.parse_args()
    if args and args.version:
        print 'video-montage version %s by %s' % (__version__, __author__)
        raise SystemExit(0)
    if not args or not args.video_files:
        parser.print_help()
        raise SystemExit(1)

    return args

if __name__ == '__main__':
    args = parse_args()
    m = VideoMontager(args)
    m.start()

